#start with slides
> ~/.kube/config
RESOURCE_GROUP=brownbag
CLUSTER_NAME=brownbagcluster
DNS_NAME_PREFIX=brownbag
ACR_NAME=brownbagacr
az group create --name $RESOURCE_GROUP --location australiasoutheast
az aks create --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --node-count 3 --enable-addons http_application_routing --dns-name-prefix $DNS_NAME_PREFIX-$RANDOM --generate-ssh-keys --node-vm-size Standard_B2s
# ^ takes 5m

#slides 

az aks get-credentials --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
az acr create --resource-group $RESOURCE_GROUP --name $ACR_NAME --sku Basic
az aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP --attach-acr $ACR_NAME
# ^ takes 1m

#slides 

cd brownbagsite

#show the app and the dockerfile

az acr build --image brownbag-website:v1 --registry $ACR_NAME --file Dockerfile .

#execute the deployment, service, and 

kubectl apply -f ./deployment.yaml
kubectl apply -f ./service.yaml
az network dns zone list --output table
# - replace spec.rules.host with brownbag.[uuid].[region]
kubectl apply -f ./ingress.yaml

#back to slides, at the service/ingress slides, talk through those, tabbing to look at the files as desired

kubectl get deploy brownbag-website -o=wide
kubectl get pod -o=wide
kubectl get node -o=wide
kubectl get service -o=wide
kubectl get ingress -o=wide


az network dns zone list --output table # until it says 4, then grab zonename and resourcegroup and put into:
az network dns record-set list -g <resource-group> -z <zone-name> --output table
